{"version":3,"sources":["assets/logo.png","assets/chef.png","assets/hall.png","components/button/Button.js","components/input/Input.js","components/image/image.js","components/modal/modal.js","config/firebase.js","pages/register/register.js","pages/login/login.js","pages/kitchen/ordersReceived.js","pages/hall/newRequest.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","type","onClick","id","className","class","name","Input","checked","onChange","value","placeholder","Image","src","alt","Modal","onClose","children","e","target","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Register","useState","setName","email","setEmail","job","setJob","password","setPassword","passwordConfirm","setPasswordConfirm","history","useHistory","event","preventDefault","Swal","fire","text","icon","auth","createUserWithEmailAndPassword","then","push","uid","currentUser","firestore","collection","doc","set","updateProfile","displayName","catch","error","code","chef","htmlFor","hall","Login","isModalVisible","setIsModalVisible","logo","signInWithEmailAndPassword","user","get","data","ordersReceived","link","to","handleClick","signOut","newRequest","App","path","component","OrdersReceived","NewRequest","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.93b5e5df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.424fb1ed.png\";","module.exports = __webpack_public_path__ + \"static/media/chef.daaa92ce.png\";","module.exports = __webpack_public_path__ + \"static/media/hall.49b4572c.png\";","import React from 'react';\nimport './button.css'\n\nconst Button = (props) => {\nreturn <button type={props.type} onClick={props.onClick} id={props.id} className={props.class}>{props.name}</button>\n}\n\nexport default Button;","import React from 'react';\n\nconst Input = (props) => {\n  return <input type={props.type} name={props.name} checked={props.checked} onChange={props.onChange} id={props.id} className={props.class} value={props.value} placeholder={props.placeholder}></input>\n}\n\nexport default Input;","import React from 'react';\n\nconst Image = (props) => (\n  <img src={props.src} alt={props.alt} className={props.class} />\n)\n\nexport default Image;","import React from 'react';\nimport './modal.css'\n\nconst Modal = ({ id = 'modal', onClose = () => {}, children }) => {\n  const handleOutsideClick = (e) => {\n    if (e.target.id === id) onClose()\n  }\n  return <div id={id} className='modal' onClick={handleOutsideClick}>\n          <div className='container'>\n            <button className='close' onClick={onClose}></button>\n            <div className='content'>\n              {children}\n            </div>\n          </div>\n        </div>\n}\nexport default Modal;","import firebase from 'firebase/app'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDPrl1Wy18D6rej3zpQEnlOBwUASe_IszI\",\n  authDomain: \"burger-queen-lab-d4315.firebaseapp.com\",\n  databaseURL: \"https://burger-queen-lab-d4315.firebaseio.com\",\n  projectId: \"burger-queen-lab-d4315\",\n  storageBucket: \"burger-queen-lab-d4315.appspot.com\",\n  messagingSenderId: \"966507845552\",\n  appId: \"1:966507845552:web:5ceaacd782f0a4a5b96875\",\n  measurementId: \"G-MPDMRW3N0P\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n\n  export default firebase\n","import React,  {useState} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport Button from '../../components/button/Button'\nimport Input from '../../components/input/Input'\nimport Image from '../../components/image/image'\nimport chef from '../../assets/chef.png'\nimport hall from '../../assets/hall.png'\nimport firebase from '../../config/firebase.js'\nimport \"firebase/firebase-auth\";\nimport \"firebase/firebase-firestore\";\nimport './register.css'\n\nconst Register = () => {\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [job, setJob] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const history = useHistory();\n  \nconst registerLogin = () => {\n  if (!name || !email || !job || !password) {\n    Swal.fire({\n      text: 'Preencha os campos em branco',\n      icon: 'warning',\n    });\n  }else if (password !== passwordConfirm) {\n    Swal.fire({\n      text: 'Senhas nÃ£o conferem',\n      icon: 'warning',\n    });\n  }else {\n    firebase.auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then(() => {\n      if (job === 'hall') {\n        history.push('/newRequest');\n      } else {\n        history.push('/ordersReceived');\n      }\n    })\n    .then(() => {\n      const uid = firebase.auth().currentUser.uid;\n      firebase.firestore().collection('users')\n        .doc(uid)\n        .set({\n          name,\n          job,\n          uid: firebase.auth().currentUser.uid,\n          email\n        })\n        .then(\n          firebase.auth().currentUser.updateProfile({\n            displayName: name,\n          })\n        );\n    })\n    .catch((error) => {\n      if (error.code === 'auth/invalid-email') {\n        Swal.fire({\n          text: 'Email invÃ¡lido',\n          icon: 'warning',\n        });\n      } else if (error.code === 'auth/weak-password') {\n        Swal.fire({\n          text: 'Senha deve conter no mÃ­nino 6 caracteres',\n          icon: 'warning',\n        });\n      } else if (error.code === 'auth/email-already-in-use') {\n        Swal.fire({\n          text: 'UsuÃ¡rio jÃ¡ cadastrado',\n          icon: 'warning',\n        });\n      }\n  });\n  }\n}\n\nconst createUser = (event) => {\n  event.preventDefault();\n  registerLogin(email, password)\n}\n\nreturn (\n    <div className='form-register'>\n        <Input type=\"name\" id=\"name\" class=\"input-text\" value={name} onChange={e => setName(e.target.value)} placeholder=\"Nome e Sobrenome\" />\n        <Input type=\"email\" id=\"email\" class=\"input-text\" value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Digite seu email\" />\n        <Input type=\"password\" id=\"password\" class=\"input-text\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Digite sua senha\" />\n        <Input type=\"password\" id=\"passwordConfirm\" class=\"input-text\" value={passwordConfirm} onChange={e => setPasswordConfirm(e.target.value)} placeholder=\"Confirme a sua senha\" />\n        <Button id=\"register\" class=\"btn-register\" type='submit' onClick={createUser} name=\"Registrar\" />\n        <div className='select-type'>\n          <Image src={chef} alt='img-chef' class='chef-kitchen'/>\n          <label htmlFor='cozinha' className='label-kitchen'>COZINHA</label>\n          <Input type='radio' class='btn-radio-kitchen' name='job' value='kitchen' onChange={e => setJob(e.target.value)} id='kitchen' />\n          </div>\n          <div className='select-type-two'>\n            <Image src={hall} alt='img-hall' class='img-hall'/>\n            <label htmlFor='salao' className='label-hall'>SALÃO</label>\n            <Input type='radio' class='btn-radio-hall' name='job' value='hall' onChange={e => setJob(e.target.value)} id='hall' />\n          </div>\n    </div>\n\n)\n\n}\n\nexport default Register\n","import React, {useState} from 'react';\nimport Button from '../../components/button/Button'\nimport Input from '../../components/input/Input'\nimport Image from '../../components/image/image'\nimport logo from '../../assets/logo.png'\nimport Modal from '../../components/modal/modal';\nimport Register from '../register/register';\nimport firebase from \"../../config/firebase.js\";\nimport \"firebase/firebase-auth\";\nimport \"firebase/firebase-firestore\";\nimport Swal from \"sweetalert2\";\nimport { useHistory } from \"react-router-dom\";\nimport './login.css'\n\nconst Login = () => {\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n\n  const loginUser = () => {\n    if (!email) {\n      Swal.fire({\n        text: 'Prencha o campo de \"email\"',\n        icon: \"warning\",\n      });\n    } else if (!password) {\n      Swal.fire({\n        text: 'Prencha o campo de \"senha\"',\n        icon: \"warning\",\n      });\n    } else {\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n        .then((uid) => {\n          firebase\n            .firestore()\n            .collection(\"users\")\n            .doc(uid.user.uid)\n            .get()\n            .then((doc) => { \n              if (doc.data().job === \"hall\") {\n                history.push(\"/newRequest\");\n              } else {\n                history.push(\"/ordersReceived\");\n              }  \n            })\n        }) \n        .catch(function (error) {\n          if (error.code === \"auth/user-not-found\") {\n            Swal.fire({\n              text: \"UsuÃ¡rio nÃ£o encontrado\",\n              icon: \"warning\",\n            });\n          } else if (error.code === \"auth/wrong-password\") {\n            Swal.fire({\n              text: \"Senha invÃ¡lida\",\n              icon: \"warning\",\n            });\n          } else {\n            Swal.fire({\n              text: error,\n              icon: \"warning\",\n            });\n          }\n        });\n    }\n  };\n\n  const signIn = (event) => {\n    event.preventDefault();\n    loginUser(email, password);\n  };\n\nreturn (\n    <div className='div'>\n        <figure>\n        <Image src={logo} alt='logo' class='logo-login'/>\n        </figure>\n        <div className='select-form'>\n            <form className= 'form-login'>\n                <Input type=\"email\" id=\"email\" class='input-login'  value={email}\n          onChange={(e) => setEmail(e.target.value)} placeholder=\"Digite seu email\" />\n                <Input type=\"password\" id=\"password\" class='input-login' value={password}\n          onChange={(e) => setPassword(e.target.value)} placeholder=\"Digite sua senha\" />\n                <Button id=\"login\" class=\"button-loggin\" name=\"Entrar\" onClick={signIn}/>\n                <p onClick={ () => setIsModalVisible(true) }>Ainda nÃ£o tem cadastro? Registre-se aqui!</p>\n                {isModalVisible ? (\n                <Modal onClose={ () => setIsModalVisible(false) }>\n                    <Register />\n                </Modal>\n                ) : null}\n            </form>\n        </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from '../../components/button/Button';\nimport firebase from \"../../config/firebase.js\";\nimport \"firebase/firebase-auth\";\nimport \"firebase/firebase-firestore\";\n\nconst ordersReceived = () => {\n    return (\n        <div link='/ordersReceived'>\n        <Link to=\"/ordersReceived\">\n     Pedidos Recebidos\n   </Link>\n       <div>PÃ¡gina da Cozinha</div>\n       <div>\n       <Link to='/'>\n        <Button name='SAIR'\n          handleClick={() => firebase.auth().signOut()}/>\n        </Link>\n      </div>\n   </div>\n    )\n}\n\nexport default ordersReceived;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from '../../components/button/Button'\nimport firebase from \"../../config/firebase.js\";\nimport \"firebase/firebase-auth\";\nimport \"firebase/firebase-firestore\";\n\nconst newRequest = () => {\n    return (\n        <div link='/newRequest'>\n             <Link>\n          Novo Pedido\n        </Link>\n            <div>PÃ¡gina do SalÃ£o</div>\n            <div>\n      <Link to='/'>\n        <Button name='SAIR'\n          handleClick={() => firebase.auth().signOut()}/>\n        </Link>\n      </div>\n        </div>\n    )\n}\n\nexport default newRequest","import React from 'react';\nimport './App.css';\nimport Login from './pages/login/login.js'\nimport OrdersReceived from './pages/kitchen/ordersReceived'\nimport NewRequest from './pages/hall/newRequest'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nexport default function App() {\n\n  return (\n    <Router>\n        <Switch>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/ordersReceived\" component={OrdersReceived}/>\n          <Route path=\"/newRequest\" component={NewRequest}/>\n          <Route exact path=\"/\" component={Login}/>\n        </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}